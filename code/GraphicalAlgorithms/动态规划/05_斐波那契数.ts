// 斐波那契数 （通常用 F(n) 表示）形成的序列称为斐波那契数列。该数列由 0 和 1 开始，后面的每一项数字都是前面两项数字的和。也就是：
// F(0) = 0，F(1) = 1
// F(n) = F(n - 1) + F(n - 2)，其中 n > 1
// 给定 n，请计算 F(n) 。
// 答案需要取模 1e9+7(1000000007) ，如计算初始结果为：1000000008，请返回 1。

function fib(n: number): number {
  // 方法一：递归
  // * 时间复杂度：O(2^n)
  // * 空间复杂度：O(n)
  // if (n === 0) return 0;
  // if (n === 1) return 1;
  // return fib(n - 1) + fib(n - 2);

  // 方法二：动态规划
  // * 时间复杂度：O(n)
  // * 空间复杂度：O(n)
  const dp = Array(n + 1).fill(0);
  dp[0] = 0;
  dp[1] = 1;
  for (let i = 2; i <= n; i++) {
    dp[i] = (dp[i - 1] + dp[i - 2]) % 1000000007;
  }
  return dp[n];
}

export {};
